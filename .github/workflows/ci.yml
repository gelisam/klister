name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

env:
  KLISTERPATH: ${{ github.workspace }}/examples

jobs:
  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
            # latest GHC, default OS
          - cabal: "3.8"
            ghc: "9.6"
            os: ubuntu-latest

            # non-latest GHC, default OS
          - cabal: "3.8"
            ghc: "9.4"
            os: ubuntu-latest

            # non-latest GHC, default OS
          - cabal: "3.6"
            ghc: "9.2.5"
            os: ubuntu-latest

            # latest GHC, non-default OS
          - cabal: "3.8"
            ghc: "9.6"
            os: macOS-latest

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v2
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Freeze
      run: |
        cabal configure --enable-tests --enable-benchmarks --test-show-details=direct
        cabal freeze

    - uses: actions/cache@v1
      name: Cache ~/.cabal/store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

    - name: Build
      run: |
        cabal build all

    - name: Path
      run: |
        echo "$KLISTERPATH"

    - name: Test
      run: |
        cabal test all

    - name: TestDebug
      run: |
        cabal test all --ghc-options='-debug'

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      # only test stack with one OS and one GHC version; if it works with
      # cabal, it probably also works with stack.
      matrix:
        ghc: ['9.2.8']

    steps:
    - uses: actions/checkout@v2
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v2
      name: Setup Haskell Stack
      with:
        enable-stack: true
        ghc-version: ${{ matrix.ghc }}
        stack-version: 'latest'

    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

    - name: Test
      run: |
        stack test --system-ghc
