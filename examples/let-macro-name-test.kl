#lang "prelude.kl"
(import (shift "prelude.kl" 1))

-- level 0
(define-macro (outer-macro)
  -- level 1
  (let [enable-ten 1]  -- bound in the regular environment at level 1, its value is 1
    (let-macro-name
      [inner-macro-name  -- bound in the regular environment at level 1, its value is 'inner-macro
       (lambda (stx)
         -- still level 1
         (if (= enable-ten 1)  -- captures enable-ten
           (pure '10)
           (pure '5)))]
      (pure `(+ 1 (,inner-macro-name))))))

(example (outer-macro))
-- expands to
-- (+ 1 (inner-macro))  -- used at level 0, its body runs at level 1
-- returns 11
