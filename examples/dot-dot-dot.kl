#lang "prelude.kl"
-- GENERATED BY ../bootstrap.rkt, DO NOT EDIT

(import "list-syntax.kl")

(import (shift "list-syntax.kl" 1))

(import (rename (shift "prelude.kl" 1)
                (syntax-case
                 raw-syntax-case)))

(define-macros
 ((fancy-unquote
   (lambda (stx)
     (syntax-error
      '"fancy-unquote used out of context"
      stx)))
  (fancy-...
   (lambda (stx)
     (syntax-error
      '"fancy-... used out of context"
      stx)))))

(group
 (define-macros ())
 (define-macros
  ((fancy-quasiquote
    (lambda (stx)
      (let (failure-cc-141
            (lambda ()
              (syntax-error
               '"fancy-quasiquote call has invalid syntax"
               stx)))
        (let (failure-cc-141
              (lambda ()
                (raw-syntax-case
                 stx
                 ((cons
                   head-142
                   tail-143)
                  (raw-syntax-case
                   tail-143
                   ((cons
                     head-144
                     tail-145)
                    (let (pat head-144)
                      (raw-syntax-case
                       tail-145
                       (()
                        (let (stx-name
                              (pair-list-syntax
                               'quote
                               (replace-loc
                                pat
                                'here)
                               'here))
                          (flet
                           (fancy-inside
                            (pat)
                            (let (failure-cc-123
                                  (lambda ()
                                    (syntax-error
                                     '"fancy-quasiquote call has invalid syntax"
                                     pat)))
                              (let (failure-cc-123
                                    (lambda ()
                                      (let (x
                                            pat)
                                        (pure
                                         (pair-list-syntax
                                          'quote
                                          x
                                          stx)))))
                                (let (failure-cc-123
                                      (lambda ()
                                        (raw-syntax-case
                                         pat
                                         ((cons
                                           head-124
                                           tail-125)
                                          (let (head
                                                head-124)
                                            (let (tail
                                                  tail-125)
                                              (>>=
                                               (fancy-inside
                                                head)
                                               (lambda (inside-head)
                                                 (>>=
                                                  (fancy-inside
                                                   tail)
                                                  (lambda (inside-tail)
                                                    (pure
                                                     (cons-list-syntax
                                                      'cons-list-syntax
                                                      (cons-list-syntax
                                                       inside-head
                                                       (cons-list-syntax
                                                        inside-tail
                                                        (cons-list-syntax
                                                         stx-name
                                                         '()
                                                         stx)
                                                        stx)
                                                       stx)
                                                      stx)))))))))
                                         (_
                                          (failure-cc-123)))))
                                  (let (failure-cc-123
                                        (lambda ()
                                          (raw-syntax-case
                                           pat
                                           ((cons
                                             head-126
                                             tail-127)
                                            (raw-syntax-case
                                             head-126
                                             ((cons
                                               head-131
                                               tail-132)
                                              (raw-syntax-case
                                               head-131
                                               ((ident
                                                 ident135)
                                                (>>=
                                                 (free-identifier=?
                                                  ident135
                                                  'fancy-unquote)
                                                 (lambda (same-identifier)
                                                   (if same-identifier
                                                     (raw-syntax-case
                                                      tail-132
                                                      ((cons
                                                        head-133
                                                        tail-134)
                                                       (let (head
                                                             head-133)
                                                         (raw-syntax-case
                                                          tail-134
                                                          (()
                                                           (raw-syntax-case
                                                            tail-127
                                                            ((cons
                                                              head-128
                                                              tail-129)
                                                             (raw-syntax-case
                                                              head-128
                                                              ((ident
                                                                ident130)
                                                               (>>=
                                                                (free-identifier=?
                                                                 ident130
                                                                 'fancy-...)
                                                                (lambda (same-identifier)
                                                                  (if same-identifier
                                                                    (let (tail
                                                                          tail-129)
                                                                      (>>=
                                                                       (fancy-inside
                                                                        tail)
                                                                       (lambda (inside-tail)
                                                                         (pure
                                                                          (cons-list-syntax
                                                                           'append-list-syntax
                                                                           (cons-list-syntax
                                                                            head
                                                                            (cons-list-syntax
                                                                             inside-tail
                                                                             (cons-list-syntax
                                                                              stx-name
                                                                              '()
                                                                              stx)
                                                                             stx)
                                                                            stx)
                                                                           stx)))))
                                                                    (failure-cc-123)))))
                                                              (_
                                                               (failure-cc-123))))
                                                            (_
                                                             (failure-cc-123))))
                                                          (_
                                                           (failure-cc-123)))))
                                                      (_
                                                       (failure-cc-123)))
                                                     (failure-cc-123)))))
                                               (_
                                                (failure-cc-123))))
                                             (_
                                              (failure-cc-123))))
                                           (_
                                            (failure-cc-123)))))
                                    (let (failure-cc-123
                                          (lambda ()
                                            (raw-syntax-case
                                             pat
                                             ((cons
                                               head-136
                                               tail-137)
                                              (raw-syntax-case
                                               head-136
                                               ((ident
                                                 ident140)
                                                (>>=
                                                 (free-identifier=?
                                                  ident140
                                                  'fancy-unquote)
                                                 (lambda (same-identifier)
                                                   (if same-identifier
                                                     (raw-syntax-case
                                                      tail-137
                                                      ((cons
                                                        head-138
                                                        tail-139)
                                                       (let (x
                                                             head-138)
                                                         (raw-syntax-case
                                                          tail-139
                                                          (()
                                                           (pure
                                                            x))
                                                          (_
                                                           (failure-cc-123)))))
                                                      (_
                                                       (failure-cc-123)))
                                                     (failure-cc-123)))))
                                               (_
                                                (failure-cc-123))))
                                             (_
                                              (failure-cc-123)))))
                                      (failure-cc-123)))))))
                           (fancy-inside
                            pat))))
                       (_
                        (failure-cc-141)))))
                   (_
                    (failure-cc-141))))
                 (_ (failure-cc-141)))))
          (failure-cc-141))))))))

(example
 (fancy-quasiquote
  (1
   (fancy-unquote '(2 3))
   (fancy-unquote '(4 5))
   fancy-...
   6)))

(export (rename ((fancy-quasiquote
                  quasiquote)
                 (fancy-unquote unquote)
                 (fancy-... ...))
                fancy-quasiquote
                fancy-unquote
                fancy-...))
