#lang "prelude.kl"
-- GENERATED BY ../bootstrap.rkt, DO NOT EDIT

(import "list-syntax.kl")

(import (shift "list-syntax.kl" 1))

(import (rename (shift "prelude.kl" 1)
                (syntax-case
                 raw-syntax-case)))

(define-macros
 ((fancy-unquote
   (lambda (stx)
     (syntax-error
      '"fancy-unquote used out of context"
      stx)))
  (fancy-...
   (lambda (stx)
     (syntax-error
      '"fancy-... used out of context"
      stx)))))

(define-macros
 ((fancy-quasiquote
   (lambda (stx)
     (let (failure-cc-174
           (lambda ()
             (syntax-error
              '"fancy-quasiquote call has invalid syntax"
              stx)))
       (let (failure-cc-174
             (lambda ()
               (raw-syntax-case
                stx
                ((cons
                  head-175
                  tail-176)
                 (raw-syntax-case
                  tail-176
                  ((cons
                    head-177
                    tail-178)
                   (let (pat head-177)
                     (raw-syntax-case
                      tail-178
                      (()
                       (let (stx-name
                             (cons-list-syntax
                              'quote
                              (cons-list-syntax
                               (replace-loc
                                pat
                                'here)
                               '()
                               'here)
                              'here))
                         (flet
                          (fancy-inside
                           (pat)
                           (let (failure-cc-156
                                 (lambda ()
                                   (syntax-error
                                    '"fancy-quasiquote call has invalid syntax"
                                    pat)))
                             (let (failure-cc-156
                                   (lambda ()
                                     (let (x
                                           pat)
                                       (pure
                                        (pair-list-syntax
                                         'quote
                                         x
                                         stx)))))
                               (let (failure-cc-156
                                     (lambda ()
                                       (raw-syntax-case
                                        pat
                                        ((cons
                                          head-172
                                          tail-173)
                                         (let (head
                                               head-172)
                                           (let (tail
                                                 tail-173)
                                             (>>=
                                              (fancy-inside
                                               head)
                                              (lambda (inside-head)
                                                (>>=
                                                 (fancy-inside
                                                  tail)
                                                 (lambda (inside-tail)
                                                   (pure
                                                    (cons-list-syntax
                                                     'cons-list-syntax
                                                     (cons-list-syntax
                                                      inside-head
                                                      (cons-list-syntax
                                                       inside-tail
                                                       (cons-list-syntax
                                                        stx-name
                                                        '()
                                                        stx)
                                                       stx)
                                                      stx)
                                                     stx)))))))))
                                        (_
                                         (failure-cc-156)))))
                                 (let (failure-cc-156
                                       (lambda ()
                                         (raw-syntax-case
                                          pat
                                          ((cons
                                            head-162
                                            tail-163)
                                           (raw-syntax-case
                                            head-162
                                            ((cons
                                              head-167
                                              tail-168)
                                             (raw-syntax-case
                                              head-167
                                              ((ident
                                                ident171)
                                               (>>=
                                                (free-identifier=?
                                                 ident171
                                                 'fancy-unquote)
                                                (lambda (same-identifier)
                                                  (if same-identifier
                                                    (raw-syntax-case
                                                     tail-168
                                                     ((cons
                                                       head-169
                                                       tail-170)
                                                      (let (head
                                                            head-169)
                                                        (raw-syntax-case
                                                         tail-170
                                                         (()
                                                          (raw-syntax-case
                                                           tail-163
                                                           ((cons
                                                             head-164
                                                             tail-165)
                                                            (raw-syntax-case
                                                             head-164
                                                             ((ident
                                                               ident166)
                                                              (>>=
                                                               (free-identifier=?
                                                                ident166
                                                                'fancy-...)
                                                               (lambda (same-identifier)
                                                                 (if same-identifier
                                                                   (let (tail
                                                                         tail-165)
                                                                     (>>=
                                                                      (fancy-inside
                                                                       tail)
                                                                      (lambda (inside-tail)
                                                                        (pure
                                                                         (cons-list-syntax
                                                                          'append-list-syntax
                                                                          (cons-list-syntax
                                                                           head
                                                                           (cons-list-syntax
                                                                            inside-tail
                                                                            (cons-list-syntax
                                                                             stx-name
                                                                             '()
                                                                             stx)
                                                                            stx)
                                                                           stx)
                                                                          stx)))))
                                                                   (failure-cc-156)))))
                                                             (_
                                                              (failure-cc-156))))
                                                           (_
                                                            (failure-cc-156))))
                                                         (_
                                                          (failure-cc-156)))))
                                                     (_
                                                      (failure-cc-156)))
                                                    (failure-cc-156)))))
                                              (_
                                               (failure-cc-156))))
                                            (_
                                             (failure-cc-156))))
                                          (_
                                           (failure-cc-156)))))
                                   (let (failure-cc-156
                                         (lambda ()
                                           (raw-syntax-case
                                            pat
                                            ((cons
                                              head-157
                                              tail-158)
                                             (raw-syntax-case
                                              head-157
                                              ((ident
                                                ident161)
                                               (>>=
                                                (free-identifier=?
                                                 ident161
                                                 'fancy-unquote)
                                                (lambda (same-identifier)
                                                  (if same-identifier
                                                    (raw-syntax-case
                                                     tail-158
                                                     ((cons
                                                       head-159
                                                       tail-160)
                                                      (let (x
                                                            head-159)
                                                        (raw-syntax-case
                                                         tail-160
                                                         (()
                                                          (pure
                                                           x))
                                                         (_
                                                          (failure-cc-156)))))
                                                     (_
                                                      (failure-cc-156)))
                                                    (failure-cc-156)))))
                                              (_
                                               (failure-cc-156))))
                                            (_
                                             (failure-cc-156)))))
                                     (failure-cc-156)))))))
                          (fancy-inside
                           pat))))
                      (_
                       (failure-cc-174)))))
                  (_ (failure-cc-174))))
                (_ (failure-cc-174)))))
         (failure-cc-174)))))))

(example
 (fancy-quasiquote
  (1
   (fancy-unquote '(2 3))
   (fancy-unquote '(4 5))
   fancy-...
   6)))

(export (rename ((fancy-quasiquote
                  quasiquote)
                 (fancy-unquote unquote)
                 (fancy-... ...))
                fancy-quasiquote
                fancy-unquote
                fancy-...))
