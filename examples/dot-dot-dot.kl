#lang "prelude.kl"
-- GENERATED BY ../bootstrap.rkt, DO NOT EDIT

(import (rename "prelude.kl"
                (define-macros
                 raw-define-macros)))

(import (shift "list-syntax.kl" 1))

(import (rename (shift "prelude.kl" 1)
                (syntax-case
                 raw-syntax-case)))

(group
 (raw-define-macros
  ((keyword
    (lambda (raw-stx)
      (syntax-error
       '"keyword used out of context"
       raw-stx)))))
 (define-macros
  ((my-macro
    (lambda (raw-stx)
      (let (failure-cc
            (lambda ()
              (syntax-error
               '"macro-name call has invalid syntax"
               raw-stx)))
        (let (failure-cc
              (lambda ()
                (raw-syntax-case
                 raw-stx
                 ((cons
                   head-163
                   tail-164)
                  (let (_ head-163)
                    (raw-syntax-case
                     tail-164
                     ((cons
                       head-165
                       tail-166)
                      (raw-syntax-case
                       head-165
                       ((cons
                         head-167
                         tail-168)
                        (let (foo
                              head-167)
                          (let (tail
                                tail-168)
                            (raw-syntax-case
                             tail-166
                             (()
                              (pure
                               (pair-list-syntax
                                'quote
                                tail
                                raw-stx)))
                             (_
                              (failure-cc))))))
                       (_
                        (failure-cc))))
                     (_ (failure-cc)))))
                 (_ (failure-cc)))))
          (let (failure-cc
                (lambda ()
                  (raw-syntax-case
                   raw-stx
                   ((cons
                     head-169
                     tail-170)
                    (let (_ head-169)
                      (raw-syntax-case
                       tail-170
                       ((cons
                         head-171
                         tail-172)
                        (raw-syntax-case
                         head-171
                         ((cons
                           head-173
                           tail-174)
                          (raw-syntax-case
                           head-173
                           ((cons
                             head-181
                             tail-182)
                            (let (a
                                  head-181)
                              (raw-syntax-case
                               tail-182
                               ((cons
                                 head-183
                                 tail-184)
                                (let (b
                                      head-183)
                                  (raw-syntax-case
                                   tail-184
                                   (()
                                    (raw-syntax-case
                                     tail-174
                                     ((cons
                                       head-175
                                       tail-176)
                                      (raw-syntax-case
                                       head-175
                                       ((cons
                                         head-177
                                         tail-178)
                                        (let (c
                                              head-177)
                                          (raw-syntax-case
                                           tail-178
                                           ((cons
                                             head-179
                                             tail-180)
                                            (let (d
                                                  head-179)
                                              (raw-syntax-case
                                               tail-180
                                               (()
                                                (raw-syntax-case
                                                 tail-176
                                                 (()
                                                  (raw-syntax-case
                                                   tail-172
                                                   (()
                                                    (pure
                                                     (pair-list-syntax
                                                      'quote
                                                      (cons-list-syntax
                                                       'a
                                                       (cons-list-syntax
                                                        'b
                                                        (cons-list-syntax
                                                         'c
                                                         (cons-list-syntax
                                                          'd
                                                          '()
                                                          raw-stx)
                                                         raw-stx)
                                                        raw-stx)
                                                       raw-stx)
                                                      raw-stx)))
                                                   (_
                                                    (failure-cc))))
                                                 (_
                                                  (failure-cc))))
                                               (_
                                                (failure-cc)))))
                                           (_
                                            (failure-cc)))))
                                       (_
                                        (failure-cc))))
                                     (_
                                      (failure-cc))))
                                   (_
                                    (failure-cc)))))
                               (_
                                (failure-cc)))))
                           (_
                            (failure-cc))))
                         (_
                          (failure-cc))))
                       (_
                        (failure-cc)))))
                   (_ (failure-cc)))))
            (failure-cc)))))))))

(example (my-macro ((1 2) (3 4))))

(example (my-macro (keyword foo bar)))
